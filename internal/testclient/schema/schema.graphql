directive @composeDirective(name: String!) repeatable on SCHEMA
directive @extends on OBJECT | INTERFACE
directive @external on OBJECT | FIELD_DEFINITION
directive @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION
directive @interfaceObject on OBJECT
directive @key(fields: FieldSet!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE
directive @link(import: [String!], url: String!) repeatable on SCHEMA
directive @override(from: String!) on FIELD_DEFINITION
"""This directive is used to prefix the ID of an object with a given string."""
directive @prefixedID(prefix: String!) on OBJECT
directive @provides(fields: FieldSet!) on FIELD_DEFINITION
directive @requires(fields: FieldSet!) on FIELD_DEFINITION
directive @shareable repeatable on FIELD_DEFINITION | OBJECT
directive @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION
"""Input information to create a virtual machine cpu config."""
input CreateVirtualMachineCPUConfigInput {
	"""The ID for the owner for this virtual machine cpu config."""
	ownerID: ID!
	"""The number of cores for this virtual machine."""
	cores: Int!
	"""The number of sockets for this virtual machine."""
	sockets: Int!
	virtualMachineID: ID
}
"""Create a new virtual machine."""
input CreateVirtualMachineInput {
	"""The name of the Virtual Machine."""
	name: String!
	"""The ID for the owner of this Virtual Machine."""
	ownerID: ID!
	"""The ID for the location of this virtual machine."""
	locationID: ID!
	"""The userdata for this virtual machine."""
	userdata: String
	virtualMachineCPUConfigID: ID!
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
scalar FieldSet
"""A valid JSON string."""
scalar JSON
type Location @key(fields: "id") {
	id: ID!
	virtualMachines(
		"""Returns the elements in the list that come after the specified cursor."""
		after: Cursor

		"""Returns the first _n_ elements from the list."""
		first: Int

		"""Returns the elements in the list that come before the specified cursor."""
		before: Cursor

		"""Returns the last _n_ elements from the list."""
		last: Int

		"""Ordering options for VirtualMachine returned from the connection."""
		orderBy: VirtualMachineOrder

		"""Filtering options for VirtualMachine returned from the connection."""
		where: VirtualMachineWhereInput
	): VirtualMachineConnection!
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node {
	"""The id of the object."""
	id: ID!
}
"""Possible directions in which to order a list of items when provided an `orderBy` argument."""
enum OrderDirection {
	"""Specifies an ascending order for a given `orderBy` argument."""
	ASC
	"""Specifies a descending order for a given `orderBy` argument."""
	DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo @shareable {
	"""When paginating forwards, are there more items?"""
	hasNextPage: Boolean!
	"""When paginating backwards, are there more items?"""
	hasPreviousPage: Boolean!
	"""When paginating backwards, the cursor to continue."""
	startCursor: Cursor
	"""When paginating forwards, the cursor to continue."""
	endCursor: Cursor
}
type Query {
	"""Lookup a virtual machine by ID."""
	virtualMachine(
		"""The virtual machine ID."""
		id: ID!
	): VirtualMachine!
	_entities(representations: [_Any!]!): [_Entity]!
	_service: _Service!
}
type ResourceOwner @key(fields: "id") @interfaceObject {
	id: ID!
	virtualMachine(
		"""Returns the elements in the list that come after the specified cursor."""
		after: Cursor

		"""Returns the first _n_ elements from the list."""
		first: Int

		"""Returns the elements in the list that come before the specified cursor."""
		before: Cursor

		"""Returns the last _n_ elements from the list."""
		last: Int

		"""Ordering options for VirtualMachines returned from the connection."""
		orderBy: VirtualMachineOrder

		"""Filtering options for VirtualMachines returned from the connection."""
		where: VirtualMachineWhereInput
	): VirtualMachineConnection!
}
"""The builtin Time type"""
scalar Time
"""Input information to update a virtual machine cpu config."""
input UpdateVirtualMachineCPUConfigInput {
	"""The number of cores for this virtual machine."""
	cores: Int
	"""The number of sockets for this virtual machine."""
	sockets: Int
}
"""Update an existing virtual machine."""
input UpdateVirtualMachineInput {
	"""The name of the Virtual Machine."""
	name: String
	"""The userdata for this virtual machine."""
	userdata: String
	clearUserdata: Boolean
}
type VirtualMachine implements Node @key(fields: "id") @prefixedID(prefix: "virtmac") {
	"""The ID of the VirtualMachine."""
	id: ID!
	createdAt: Time!
	updatedAt: Time!
	"""The name of the Virtual Machine."""
	name: String!
	"""The userdata for this virtual machine."""
	userdata: String
	"""The ID for the virtual machine cpu config."""
	vmCPUConfigID: ID!
	"""The virtual machine cpu config for the virtual machine."""
	virtualMachineCPUConfig: VirtualMachineCPUConfig!
	"""The location of the load balancer."""
	location: Location!
	"""The owner of the VirtualMachine"""
	owner: ResourceOwner!
}
type VirtualMachineCPUConfig implements Node @key(fields: "id") @prefixedID(prefix: "virtmac") {
	"""The ID for the virtual machaine cpu config."""
	id: ID!
	"""The number of cores for this virtual machine."""
	cores: Int!
	"""The number of sockets for this virtual machine."""
	sockets: Int!
	virtualMachine: VirtualMachine
}
"""A connection to a list of items."""
type VirtualMachineCPUConfigConnection {
	"""A list of edges."""
	edges: [VirtualMachineCPUConfigEdge]
	"""Information to aid in pagination."""
	pageInfo: PageInfo!
	"""Identifies the total count of items in the connection."""
	totalCount: Int!
}
"""An edge in a connection."""
type VirtualMachineCPUConfigEdge {
	"""The item at the end of the edge."""
	node: VirtualMachineCPUConfig
	"""A cursor for use in pagination."""
	cursor: Cursor!
}
"""Ordering options for VirtualMachineCPUConfig connections"""
input VirtualMachineCPUConfigOrder {
	"""The ordering direction."""
	direction: OrderDirection! = ASC
	"""The field by which to order VirtualMachineCPUConfigs."""
	field: VirtualMachineCPUConfigOrderField!
}
"""Properties by which VirtualMachineCPUConfig connections can be ordered."""
enum VirtualMachineCPUConfigOrderField {
	ID
	OWNER
	cores
	sockets
}
"""
VirtualMachineCPUConfigWhereInput is used for filtering VirtualMachineCPUConfig objects.
Input was generated by ent.
"""
input VirtualMachineCPUConfigWhereInput {
	not: VirtualMachineCPUConfigWhereInput
	and: [VirtualMachineCPUConfigWhereInput!]
	or: [VirtualMachineCPUConfigWhereInput!]
	"""id field predicates"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	"""cores field predicates"""
	cores: Int
	coresNEQ: Int
	coresIn: [Int!]
	coresNotIn: [Int!]
	coresGT: Int
	coresGTE: Int
	coresLT: Int
	coresLTE: Int
	"""sockets field predicates"""
	sockets: Int
	socketsNEQ: Int
	socketsIn: [Int!]
	socketsNotIn: [Int!]
	socketsGT: Int
	socketsGTE: Int
	socketsLT: Int
	socketsLTE: Int
	"""virtual_machine edge predicates"""
	hasVirtualMachine: Boolean
	hasVirtualMachineWith: [VirtualMachineWhereInput!]
}
"""A connection to a list of items."""
type VirtualMachineConnection {
	"""A list of edges."""
	edges: [VirtualMachineEdge]
	"""Information to aid in pagination."""
	pageInfo: PageInfo!
	"""Identifies the total count of items in the connection."""
	totalCount: Int!
}
"""An edge in a connection."""
type VirtualMachineEdge {
	"""The item at the end of the edge."""
	node: VirtualMachine
	"""A cursor for use in pagination."""
	cursor: Cursor!
}
"""Ordering options for VirtualMachine connections"""
input VirtualMachineOrder {
	"""The ordering direction."""
	direction: OrderDirection! = ASC
	"""The field by which to order VirtualMachines."""
	field: VirtualMachineOrderField!
}
"""Properties by which VirtualMachine connections can be ordered."""
enum VirtualMachineOrderField {
	ID
	CREATED_AT
	UPDATED_AT
	NAME
	OWNER
	VM_CPU_CONFIG
}
"""
VirtualMachineWhereInput is used for filtering VirtualMachine objects.
Input was generated by ent.
"""
input VirtualMachineWhereInput {
	not: VirtualMachineWhereInput
	and: [VirtualMachineWhereInput!]
	or: [VirtualMachineWhereInput!]
	"""id field predicates"""
	id: ID
	idNEQ: ID
	idIn: [ID!]
	idNotIn: [ID!]
	idGT: ID
	idGTE: ID
	idLT: ID
	idLTE: ID
	"""created_at field predicates"""
	createdAt: Time
	createdAtNEQ: Time
	createdAtIn: [Time!]
	createdAtNotIn: [Time!]
	createdAtGT: Time
	createdAtGTE: Time
	createdAtLT: Time
	createdAtLTE: Time
	"""updated_at field predicates"""
	updatedAt: Time
	updatedAtNEQ: Time
	updatedAtIn: [Time!]
	updatedAtNotIn: [Time!]
	updatedAtGT: Time
	updatedAtGTE: Time
	updatedAtLT: Time
	updatedAtLTE: Time
	"""name field predicates"""
	name: String
	nameNEQ: String
	nameIn: [String!]
	nameNotIn: [String!]
	nameGT: String
	nameGTE: String
	nameLT: String
	nameLTE: String
	nameContains: String
	nameHasPrefix: String
	nameHasSuffix: String
	nameEqualFold: String
	nameContainsFold: String
	"""vm_cpu_config_id field predicates"""
	vmCPUConfigID: ID
	vmCPUConfigIDNEQ: ID
	vmCPUConfigIDIn: [ID!]
	vmCPUConfigIDNotIn: [ID!]
	vmCPUConfigIDGT: ID
	vmCPUConfigIDGTE: ID
	vmCPUConfigIDLT: ID
	vmCPUConfigIDLTE: ID
	vmCPUConfigIDContains: ID
	vmCPUConfigIDHasPrefix: ID
	vmCPUConfigIDHasSuffix: ID
	vmCPUConfigIDEqualFold: ID
	vmCPUConfigIDContainsFold: ID
	"""virtual_machine_cpu_config edge predicates"""
	hasVirtualMachineCPUConfig: Boolean
	hasVirtualMachineCPUConfigWith: [VirtualMachineCPUConfigWhereInput!]
}
scalar _Any
union _Entity = Location | ResourceOwner | VirtualMachine | VirtualMachineCPUConfig
type _Service {
	sdl: String
}
